local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()
local MarketplaceService = game:GetService("MarketplaceService")
--local gamename = MarketplaceService:GetProductInfo(game.PlaceId).Name


local Window = Library:CreateWindow({
    Title = "Apel Hub",
    SubTitle = tostring("Anime Spirits Journey"),
    TabWidth = 160,
    Size = UDim2.fromOffset(600, 400),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Resize = true, -- Resize this ^ Size according to a 1920x1080 screen, good for mobile users but may look weird on some devices
    MinSize = Vector2.new(250, 250),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})


local Tabs = {
    Credits = Window:CreateTab({Title = "Credits", Icon = "book"}),
    Farm = Window:CreateTab({ Title = "Farming", Icon = "align-center" }),
    Eggs = Window:CreateTab({Title = "Eggs", Icon = "egg"}),
    Misc = Window:CreateTab({Title = " Misc", Icon = "diamond"}),
    Settings = Window:CreateTab({ Title = "Settings", Icon = "settings" }),

}

Tabs.Credits:CreateParagraph("Aligned Paragraph", {
    Title = "Discord",
    Content = "https://discord.gg/4gDAbj2VXG\n Dev - Apelsinka",
    TitleAlignment = "Middle",
    ContentAlignment = Enum.TextXAlignment.Center
})

Tabs.Credits:CreateButton({
    Title = "Copy Discord link",
    Description = "Click it",
    TitleAlignment = "Middle",
    ContentAlignment = Enum.TextXAlignment.Center,
    Callback = function()
        local link = "https://discord.gg/4gDAbj2VXG"
        setclipboard(link)
    end
})


local Options = Library.Options
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character
    local bb=game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
    bb:CaptureController()bb:ClickButton2(Vector2.new())end)

coroutine.wrap(function()
    local GC = getconnections or get_signal_cons
	if GC then
		for i,v in pairs(GC(game:GetService("Players").LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
	else
		local VirtualUser = cloneref(game:GetService("VirtualUser"))
		game:GetService("Players").LocalPlayer.Idled:Connect(function()
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
	end
end)()


do

    local EnemiesFolder = workspace
    local Enemies = {}
    local nameSet = {}

    if EnemiesFolder then
        for _, enemy in EnemiesFolder:GetChildren() do
            local enemyname = enemy.Name
            if enemy:FindFirstChild("HumanoidRootPart") then
                if enemyname and not nameSet[enemyname] then
                    table.insert(Enemies, enemyname)
                    nameSet[enemyname] = true
                end
            end
        end
    end
    
    local EnemyDropdown = Tabs.Farm:CreateDropdown("Enemy", {Title = "Enemy Selector", Description = "Select enemies for farm", Values = Enemies, Multi = true, Searchable = true, Default = {}})

    local CurrentEnemy = {}
    EnemyDropdown:OnChanged(function(Value)
        for Value, State in next, Value do
            table.insert(CurrentEnemy, Value)
        end
    end)

    function EnemyDropdown:GetSelectedValues()
        local selected = {}
        for value, state in pairs(self.Value) do
            if state then
                table.insert(selected, value)
            end
        end
        return selected
    end

    local function RefreshEnemyDropdownWithNewEnemies()
        local newEnemies = {}
        local nameSet = {}
        if EnemiesFolder then
            for _, enemy in ipairs(EnemiesFolder:GetChildren()) do
                local enemyname = enemy.Name
                if enemy:FindFirstChild("HumanoidRootPart") then
                    if enemyname and not nameSet[enemyname] then
                        table.insert(newEnemies, enemyname)
                        nameSet[enemyname] = true
                    end
                end
            end
        end
        EnemyDropdown:SetValues(newEnemies)
    end
    local AutoFarmSelectedMobs = Tabs.Farm:CreateToggle("Auto Farm Selected Mobs", {Title = "Auto Farm Selected Mobs", Default = false, Description = ""})

    Tabs.Farm:CreateButton({
        Title = "Refresh Enemies",
        Description = "Update Enemies Dropdown with your current enemies on map",
        Callback = function()
            RefreshEnemyDropdownWithNewEnemies()
        end
    })

    local function containsValue(value, table)
        for _, v in ipairs(table) do
            if v == value then
                return true
            end
        end
        return false
    end

    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    local function findHumanoidRootPart()
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                return rootPart
            end
        end
    end
    
    
    local teleportRadius = 10

    local function findNearestEnemy(selectedEnemies)
        local closestEnemy = nil
        local closestDistance = math.huge
        local rootPart = findHumanoidRootPart()


            for _, enemy in pairs(EnemiesFolder:GetChildren()) do
                if enemy:IsA("Model") and enemy:FindFirstChild("HumanoidRootPart") then
                    local enemyRootPart = enemy.PrimaryPart
                    if enemyRootPart and rootPart then
                        local distance = (rootPart.Position - enemyRootPart.Position).Magnitude
            
                        if containsValue(enemy.Name, selectedEnemies) and distance < closestDistance then
                            closestDistance = distance
                            closestEnemy = enemy
                        end
                    end
                end
            end

    
        return closestEnemy
    end

    local function teleportMeToNearestEnemyWithContains()
        local selectedEnemies = {}
        for _, value in ipairs(EnemyDropdown:GetSelectedValues()) do
            table.insert(selectedEnemies, value)
        end
        local rootPart = findHumanoidRootPart()
        local nearestEnemy = findNearestEnemy(selectedEnemies)

        if nearestEnemy and nearestEnemy:FindFirstChild("HumanoidRootPart") then
            local targetRootPart = nearestEnemy.PrimaryPart
            local distanceToEnemy = (rootPart.Position - targetRootPart.Position).Magnitude
            if distanceToEnemy > teleportRadius then
                rootPart.CFrame = CFrame.new(targetRootPart.Position + Vector3.new(0, 10, 0), targetRootPart.Position)
            end
        end
    end

    local function AttackNearestEnemy()
        local selectedEnemies = {}
        for _, value in ipairs(EnemyDropdown:GetSelectedValues()) do
            table.insert(selectedEnemies, value)
        end
        local nearestEnemy = findNearestEnemy(selectedEnemies)
        if nearestEnemy and nearestEnemy:FindFirstChild("HumanoidRootPart") then
            local targetRootPart = nearestEnemy.PrimaryPart
            local args = {
                [1] = CFrame.new(targetRootPart.Position)
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("MonsterService"):WaitForChild("RF"):WaitForChild("RequestAttack"):InvokeServer(unpack(args))            
        end
    end

    AutoFarmSelectedMobs:OnChanged(function(state)
        getgenv().AutoFarm = state
        while getgenv().AutoFarm do
            teleportMeToNearestEnemyWithContains()
            task.wait()
            AttackNearestEnemy()
        end
    end)

    local eggfolder = workspace.GameAssets.Eggs
    local egglist = {}
    local eggset = {}
    if eggfolder then
        for _, egg in ipairs(eggfolder:GetChildren()) do
            local eggname = egg.Name
            if eggname and not eggset[eggname] then
                table.insert(egglist, eggname)
                eggset[eggname] = true
            end
        end
    end

    local currenteggforfarm = nil
    local EggsDropDown = Tabs.Eggs:CreateDropdown("Eggs", {Title = "Select Egg For Auto Open", Description = "", Values = egglist, Multi = false, Default = 1,})
    EggsDropDown:OnChanged(function(Value)
        currenteggforfarm = Value
        print(currenteggforfarm)
    end)

    local AutoOpenEggs = Tabs.Eggs:CreateToggle("Auto Open Eggs", {Title = "Auto Open Selected Egg", Default = false, Description = ""})

    AutoOpenEggs:OnChanged(function(state)
        getgenv().AutoOpenEggs = state
        while getgenv().AutoOpenEggs do
            task.wait(0.01)
            local args = {
                [1] = currenteggforfarm,
                [2] = 1,
                [3] = false
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("EggService"):WaitForChild("RF"):WaitForChild("OpenEgg"):InvokeServer(unpack(args))
            
        end
    end)

    local WalkSpeedSlider = Tabs.Misc:CreateSlider("Walk Speed Slider", {
        Title = "Walkspeed",
        Description = "",
        Default = 0,
        Min = 0,
        Max = 10,
        Rounding = 1,
        Callback = function(Value)
            -- Останавливаем предыдущий цикл, если он существует
            if getgenv().TpWalking then
                getgenv().TpWalking = false
                wait(0.1) -- Небольшая задержка, чтобы дать время завершить предыдущий цикл
            end
    
            -- Устанавливаем новое значение скорости
            getgenv().Speed = tonumber(Value)
    
            local speaker = game:GetService("Players").LocalPlayer
            local chr = speaker.Character
            local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
            local hb = game:GetService("RunService").Heartbeat
    
            -- Запускаем новый цикл для перемещения
            if hum then
                getgenv().TpWalking = true
                while getgenv().TpWalking and chr and hum and hum.Parent do
                    local delta = hb:Wait()
                    if hum.MoveDirection.Magnitude > 0 then
                        chr:TranslateBy(hum.MoveDirection * tonumber(getgenv().Speed) * delta * 10)
                    else
                        chr:TranslateBy(hum.MoveDirection * delta * 10)
                    end
                end
            end
        end
    })

    local AutoCollectPlayTimeRewards = Tabs.Misc:CreateToggle("Auto Collect PlayTime Rewards", {Title = "Auto Collect Playtime Rewards", Default = false, Description = ""})

    AutoCollectPlayTimeRewards:OnChanged(function(State)
        getgenv().AutoCollectPlayTimeRewards = State
        while getgenv().AutoCollectPlayTimeRewards == true do
            if not getgenv().AutoCollectPlayTimeRewards == true then return end
            task.wait(10)
            for i = 1, 13 do
                task.wait(1)
                local args = {
                    [1] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("GiftService"):WaitForChild("RF"):WaitForChild("CollectGift"):InvokeServer(unpack(args))
                
            end

        end
    end)


    local AutoBuyPotions = Tabs.Misc:CreateToggle("AutoBuyPotions", {Title = "Auto Buy Potions", Default = false, Description = ""})

    AutoBuyPotions:OnChanged(function(State)
        getgenv().AutoBuyPotions = State
        while getgenv().AutoBuyPotions == true do
            if not getgenv().AutoBuyPotions == true then return end
            task.wait(5)
            local args = {
                [1] = "PotionVending1",
                [2] = 1
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("VendingMachineService"):WaitForChild("RF"):WaitForChild("BuyVending"):InvokeServer(unpack(args))
        end
    end)

end


SaveManager:SetLibrary(Library)
InterfaceManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("Apel Hub")
SaveManager:SetFolder("Apel Hub/".."Brainrot Evolution")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
SaveManager:LoadAutoloadConfig()

local Menu = game:GetService("CoreGui"):FindFirstChild("Menu")
if Menu then
    print("Найдено меню")
else
    local Menu = Instance.new("ScreenGui")
Menu.Name = "Menu"
local Frame = Instance.new("Frame")
Frame.Name = "Menu Button"
local ImageButton = Instance.new("ImageButton")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")

--Properties:
local coreGui = game:GetService("CoreGui")
Menu.Parent = coreGui
Menu.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = Menu
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.167999998, 0, 0.230493277, 0)
Frame.Size = UDim2.new(0.040533334, 0, 0.0681614354, 0)

ImageButton.Parent = Frame
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageButton.BorderSizePixel = 0
ImageButton.Size = UDim2.new(1, 0, 1, 0)
ImageButton.Image = "http://www.roblox.com/asset/?id=181239831"
ImageButton.MouseButton1Up:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true,"LeftControl",false,game)
end)

UIAspectRatioConstraint.Parent = ImageButton

UIAspectRatioConstraint_2.Parent = Frame
end
